{
    "swagger": "2.0",
    "info": {
        "title": "Democracy.io API",
        "description": "Internal API used by the democracy.io site",
        "version": "1.0.0"
    },
    "host": "api.democracy.io",
    "schemes": [
        "https"
    ],
    "basePath": "/api/1",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/legislators/findByLatLng": {
            "get": {
                "summary": "Legislators' biographical information by location.",
                "description": "Fetches biographical information for the US congressional representatives associated with a given latitude and longitude. The information is retrived via the [Sunlight Foundation API](https://sunlightlabs.github.io/congress/legislators.html).",
                "parameters": [
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "Latitude component of location.",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "Longitude component of location.",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    }
                ],
                "tags": [
                    "Legislators"
                ],
                "responses": {
                    "200": {
                        "description": "An array of legislators' biographical info.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Legislator"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/legislators/message": {
            "post": {
                "summary": "Sends a message to one or more representatives.",
                "description": "Sends a message to one or more representatives via the Phantom of the Capitol API.",
                "parameters": [
                    {
                        "name": "msgs",
                        "in": "body",
                        "description": "The message object to send via POTC.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                              "$ref": "#/definitions/Message"
                            }
                        }
                    }
                ],
                "tags": [
                    "Message"
                ],
                "responses": {
                    "200": {
                        "description": "Message response acknowledgement.",
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/MessageResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/legislator/{bioguideId}": {
            "get": {
                "summary": "Biographical information for a specific legislator.",
                "description": "Fetches biographical information for the legislator matching the supplied bioguideId.",
                "parameters": [
                    {
                        "name": "bioguideId",
                        "in": "path",
                        "description": "The biographical id of the legislator to retrieve.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Legislator"
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the legislator's biographical info",
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/definitions/Legislator"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/legislator/{bioguideId}/formElements": {
            "get": {
                "summary": "Fetches the form elements to contact a legislator.",
                "description": "Fetches a JSON object describing the form elements the user needs to fill out to be able to contact their legislator via their online form.",
                "parameters": [
                    {
                        "name": "bioguideId",
                        "in": "path",
                        "description": "Identifier for this member in various Congressional sources. Originally taken from the Congressional Biographical Directory, but used in many places.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Legislator",
                    "FormElements"
                ],
                "responses": {
                    "200": {
                        "description": "A LegislatorFormElements object describing the form elements the user needs to complete to contact the legislator matching the supplied bioguideId.",
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/definitions/LegislatorFormElements"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/formElements/findByLegislatorBioguideIds": {
            "get": {
                "summary": "Fetches the form elements to contact one or more legislators.",
                "description": "Fetches a JSON object describing the form elements the user needs to fill out to be able to contact their legislator(s) via their online form(s).",
                "parameters": [
                    {
                        "name": "bioguideIds",
                        "in": "query",
                        "description": "An array of bioguideIds identifying the legislators to fetch form elements for.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "FormElements"
                ],
                "responses": {
                    "200": {
                        "description": "An array of LegislatorFormElements objects describing the form elements the user needs to complete to contact the legislator(s) matching the supplied bioguideId(s).",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LegislatorFormElements"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/location/verify": {
            "get": {
                "summary": "Verifies the supplied address and returns its canonical representation.",
                "description": "Verifies the supplied address via SmartyStreets and returns a complex data object with its canonical representation. This object contains information like Zip +4 and other details.",
                "parameters": [
                    {
                        "name": "address",
                        "in": "query",
                        "description": "The address to verify.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Location"
                ],
                "responses": {
                    "200": {
                        "description": "The canonical representation of the address.",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CanonicalAddress"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/legislator/{bioguideId}/message": {
            "post": {
                "summary": "Sends a message to the user's representative(s) via POTC.",
                "description": "Sends a message to one or more representatives via the Phantom of the Capitol API.",
                "parameters": [
                    {
                        "name": "msg",
                        "in": "body",
                        "description": "The message object to send via POTC.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Message"
                        }
                    },
                    {
                        "name": "bioguideId",
                        "in": "path",
                        "description": "Identifier for this member in various Congressional sources. Originally taken from the Congressional Biographical Directory, but used in many places.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Message"
                ],
                "responses": {
                    "200": {
                        "description": "Message response acknowledgement.",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/MessageResponse"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/captchaSolution": {
            "post": {
                "summary": "Sends a captcha solution to POTC.",
                "description": "Sends a captcha solution to POTC.",
                "parameters": [
                    {
                        "name": "solution",
                        "in": "body",
                        "description": "The captcha solution to send to POTC.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CaptchaSolution"
                        }
                    }
                ],
                "tags": [
                    "captcha"
                ],
                "responses": {
                    "200": {
                        "description": "Captcha solution acknowledgement.",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/exception": {
            "post": {
                "summary": "Logs a client side exception.",
                "description": "Logs a client side exception sent from the Angular error bus.",
                "parameters": [
                    {
                        "name": "err",
                        "in": "body",
                        "description": "The exception object to log to disk.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/NgException"
                        }
                    }
                ],
                "tags": [
                    "Error"
                ],
                "responses": {
                    "200": {
                        "description": "Exception log acknowledgement.",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/subscription": {
            "post": {
                "summary": "Subscribes a user to the EFF email list.",
                "description": "Subscribes a user to the EFF email list.",
                "parameters": [
                    {
                        "name": "sub",
                        "in": "body",
                        "description": "",
                        "required": "true",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/SubscriptionRequest"
                        }
                    }
                    ]
            },
            "tags": [
                "Subscription"
            ],
            "responses": {
                "200": {
                    "description": "Subscription acknowledgement.",
                    "schema": {
                        "type": "object"
                    }
                },
                "default": {
                    "description": "Unexpected error",
                    "schema": {
                        "$ref": "#/definitions/Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "Legislator": {
            "description": "A simplified description of a US Congressional legislator.",
            "properties": {
                "bioguideId": {
                    "type": "string",
                    "description": "Identifier for this member in various Congressional sources. Originally taken from the Congressional Biographical Directory, but used in many places."
                },
                "title": {
                    "type": "string",
                    "description": "The legislator's title",
                    "enum": [
                        "Sen",
                        "Rep",
                        "Del",
                        "Com"
                    ]
                },
                "firstName": {
                    "type": "string",
                    "description": "The member’s first name. This may or may not be the name they are usually called."
                },
                "lastName": {
                    "type": "string",
                    "description": "The member’s last name."
                },
                "nickname": {
                    "type": "string",
                    "description": "The member’s nickname. If present, usually safe to assume this is the name they go by."
                },
                "middleName": {
                    "type": "string",
                    "description": "The member’s middle name, if they have one."
                },
                "nameSuffix": {
                    "type": "string",
                    "description": "A name suffix, if the member uses one. For example, “Jr.” or “III”."
                },
                "aliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of common names combinations for a Congressperson if a combination does not exist, the result will be null and the index will be consistent."
                }
            }
        },
        "LegislatorFormElements": {
            "properties": {
                "bioguideId": {
                    "type": "string",
                    "description": "Identifier for this member in various Congressional sources. Originally taken from the Congressional Biographical Directory, but used in many places."
                },
                "formElements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FormElement"
                    }
                }
            }
        },
        "FormElement": {
            "properties": {
                "value": {
                    "type": "string",
                    "description": "The name of the field."
                },
                "maxLength": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The max length for this field."
                },
                "optionsHash": {
                    "type": "object",
                    "description": "An object describing the options this field can take and the corresponding value for each option."
                }
            }
        },
        "CanonicalAddress": {
            "description": "A canonical location object describing all aspects of a US address. This is a simplified version of the [SmartyStreets verification response](https://smartystreets.com/docs/address).",
            "properties": {
                "inputId": {
                    "type": "string",
                    "description": "Any unique identifier that you use to reference the input address. The output will be identical to the input.",
                    "maxLength": 50
                },
                "inputIndex": {
                    "type": "integer",
                    "description": "The order in which this address was submitted with the others (0 if alone)."
                },
                "address": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "Contains the first delivery line (usually the street address). This can include any of Primary Number, Street Name, Street Predirection, Street Postdirection, Street Suffix, Secondary Number, Secondary Designator, PMB Designator or PMB Number."
                },
                "county": {
                    "type": "string",
                    "maxLength": 64,
                    "description": "The name of the county the address is in"
                },
                "latitude": {
                    "type": "number",
                    "format": "double",
                    "description": "The latitude for this address."
                },
                "longitude": {
                    "type": "number",
                    "format": "double",
                    "description": "The longitude for this address."
                },
                "components": {
                    "type": "object",
                    "$ref": "#/definitions/AddressComponents"
                }
            }
        },
        "AddressComponents": {
            "description": "Contains detailed components comprising an address.",
            "properties": {
                "primaryNumber": {
                    "type": "string",
                    "maxLength": 30,
                    "description": "The house, PO Box, or building number."
                },
                "streetName": {
                    "type": "string",
                    "maxLength": 64,
                    "description": "The name of the street."
                },
                "streetPredirection": {
                    "type": "string",
                    "maxLength": 16,
                    "description": "Directional information before a street name, e.g. N, SW."
                },
                "streetPostdirection": {
                    "type": "string",
                    "maxLength": 16,
                    "description": "Directional information after a street name, e.g. N, SW."
                },
                "streetSuffix": {
                    "type": "string",
                    "maxLength": 16,
                    "description": "Abbreviated value describing the street, e.g. St, Ave, Blvd."
                },
                "secondaryNumber": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Apartment or suite number, if any."
                },
                "cityName": {
                    "type": "string",
                    "maxLength": 64,
                    "description": "The accepted/proper name of the city."
                },
                "defaultCityName": {
                    "type": "string",
                    "maxLength": 64,
                    "description": "The default city name for the address. This field will not be present if the default city name is equal to the value of the city name field."
                },
                "stateAbbreviation": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "The two-letter state abbreviation."
                },
                "stateName": {
                    "type": "string",
                    "maxLength": 20,
                    "description": "The full state or territory name."
                },
                "zipcode": {
                    "type": "string",
                    "maxLength": 5,
                    "description": "The 5-digit ZIP Code"
                },
                "plus4Code": {
                    "type": "string",
                    "maxLength": 4,
                    "description": "The 4-digit add-on code (more specific than 5-digit ZIP)."
                }
            }
        },
        "Message": {
            "description": "Contains the message, sender data (title, email etc.) and any message metadata required to send a message to a user's representative(s).",
            "properties": {
                "bioguideId": {
                    "type": "string",
                    "description": "The biographical id of the legislator to message."
                },
                "topic": {
                    "type": "string",
                    "description": "The topic of the message to send."
                },
                "subject": {
                    "type": "string",
                    "description": "The subject of the message to send."
                },
                "message": {
                    "type": "string",
                    "description": "The text of the message to send."
                },
                "sender": {
                    "type": "object",
                    "$ref": "#/definitions/MessageSender"
                },
                "canonicalAddress": {
                    "type": "object",
                    "$ref": "#/definitions/CanonicalAddress"
                },
                "campaign": {
                    "type": "object",
                    "$ref": "#/definitions/Campaign"
                }
            }
        },
        "MessageSender": {
            "description": "Details of the sender of a specific message.",
            "properties": {
                "namePrefix": {
                    "type": "string",
                    "description": "The name prefix, e.g. Ms.",
                    "enum": [
                        "Ms",
                        "Mr",
                        "Mrs",
                        "Dr"
                    ]
                },
                "firstName": {
                    "type": "string",
                    "description": "The sender's first name."
                },
                "lastName": {
                    "type": "string",
                    "description": "The sender's last name."
                },
                "email": {
                    "type": "string",
                    "description": "The sender's email address."
                },
                "phone": {
                    "type": "string",
                    "description": "The sender's phone number, formatted like 123-456-7891."
                },
                "parenPhone": {
                    "type": "string",
                    "description": "The sender's phone number, formatted like (123) 456-7891."
                },
                "county": {
                  "type": "string",
                  "description": "The county, as formatted by the rep, the user is located in."
                }
            }
        },
        "Campaign": {
            "description": "Details of the campaign a message belongs to.",
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "A unique id for the campaign."
                },
                "tag": {
                    "type": "string",
                    "description": "A tag for for the campaign."
                },
                "orgURL": {
                    "type": "string",
                    "description": "The URL of the organization running the campaign."
                },
                "orgName": {
                    "type": "string",
                    "description": "The name of the organization running the campaign."
                }
            }
        },
        "MessageResponse": {
            "description": "POTC response describing the results from attempting to send a message.",
            "properties": {
                "bioguideId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "CaptchaSolution": {
            "description": "Solution for a captcha challenge.",
            "properties": {
                "bioguideId": {
                    "type": "string"
                },
                "answer": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "NgException": {
            "description": "Exception generated by the Angular FE.",
            "properties": {
                "url": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "stackTrace": {
                    "type": "string"
                },
                "cause": {
                    "type": "string"
                }
            }
        },
        "Success": {
            "description": "Success response.",
            "properties": {
                "status": {
                    "type": "string"
                },
                "data": {
                    "type": "object"
                }
            }
        },
        "SubscriptionRequest": {
            "description": "A subscription request.",
            "properties": {
                "sender": {
                    "type": "object",
                    "$ref": "#/definitions/MessageSender"
                },
                "canonicalAddress": {
                    "type": "object",
                    "$ref": "#/definitions/CanonicalAddress"
                }
            }
        },
        "Error": {
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                }
            }
        }
    }
}
