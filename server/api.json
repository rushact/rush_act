{
    "swagger": "2.0",
    "info": {
        "title": "Democracy.io API",
        "description": "Internal API used by the democracy.io site",
        "version": "1.0.0"
    },
    "host": "api.democracy.io",
    "schemes": [
        "https"
    ],
    "basePath": "/api/1",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/legislators/findByLatLng": {
            "get": {
                "summary": "Legislators' biographical information by location.",
                "description": "Fetches biographical information for the US congressional representatives associated with a given latitude and longitude. The information is retrived via the [Sunlight Foundation API](https://sunlightlabs.github.io/congress/legislators.html).",
                "parameters": [
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "Latitude component of location.",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "Longitude component of location.",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    }
                ],
                "tags": [
                    "Legislators"
                ],
                "responses": {
                    "200": {
                        "description": "An array of legislators' biographical info.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Legislator"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/legislator/{bioguideId}": {
            "get": {
                "summary": "Biographical information for a specific legislator.",
                "description": "Fetches biographical information for the legislator matching the supplied bioguideId.",
                "parameters": [
                    {
                        "name": "bioguideId",
                        "in": "path",
                        "description": "The biographical id of the legislator to retrieve.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Legislator"
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the legislator's biographical info",
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/definitions/Legislator"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/legislator/{bioguideId}/formElements": {
            "get": {
                "summary": "Fetches the form elements to contact a legislator.",
                "description": "Fetches a JSON object describing the form elements the user needs to fill out to be able to contact their legislator via their online form.",
                "parameters": [
                    {
                        "name": "bioguideId",
                        "in": "path",
                        "description": "Identifier for this member in various Congressional sources. Originally taken from the Congressional Biographical Directory, but used in many places.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Legislator",
                    "FormElements"
                ],
                "responses": {
                    "200": {
                        "description": "A LegislatorFormElements object describing the form elements the user needs to complete to contact the legislator matching the supplied bioguideId.",
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/definitions/LegislatorFormElements"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/formElements/findByLegislatorBioguideIds": {
            "get": {
                "summary": "Fetches the form elements to contact one or more legislators.",
                "description": "Fetches a JSON object describing the form elements the user needs to fill out to be able to contact their legislator(s) via their online form(s).",
                "parameters": [
                    {
                        "name": "bioguideIds",
                        "in": "query",
                        "description": "An array of bioguideIds identifying the legislators to fetch form elements for.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "FormElements"
                ],
                "responses": {
                    "200": {
                        "description": "An array of LegislatorFormElements objects describing the form elements the user needs to complete to contact the legislator(s) matching the supplied bioguideId(s).",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LegislatorFormElements"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/location/suggest": {
            "get": {
                "summary": "Retrieves a list of autocomplete suggestions for a partial address.",
                "description": "Retrieves autocomplete suggestions for a partial address from SmartyStreets, using the client IP address to bias the search via a geoip-lite lookup.",
                "parameters": [
                    {
                        "name": "address",
                        "in": "query",
                        "description": "The partial address to fetch suggestions for.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Location"
                ],
                "responses": {
                    "200": {
                        "description": "An array of AddressSuggestion objects matching the partial address.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AddressSuggestion"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/location/verify": {
            "get": {
                "summary": "Verifies the supplied address and returns its canonical representation.",
                "description": "Verifies the supplied address via SmartyStreets and returns a complex data object with its canonical representation. This object contains information like Zip +4 and other details.",
                "parameters": [
                    {
                        "name": "address",
                        "in": "query",
                        "description": "The address to verify.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "The name of the city the address is located in.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "The two letter code for the state the address is located in. It's unclear if SmartyStreets adheres to a specific ISO standard for this, so consider it to be the conventional form.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Location"
                ],
                "responses": {
                    "200": {
                        "description": "The canonical representation of the address.",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/CanonicalAddress"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Legislator": {
            "description": "A simplified description of a US Congressional legislator.",
            "properties": {
                "bioguideId": {
                    "type": "string",
                    "description": "Identifier for this member in various Congressional sources. Originally taken from the Congressional Biographical Directory, but used in many places."
                },
                "title": {
                    "type": "string",
                    "description": "The legislator's title",
                    "enum": [
                        "Sen",
                        "Rep",
                        "Del",
                        "Com"
                    ]
                },
                "firstName": {
                    "type": "string",
                    "description": "The member’s first name. This may or may not be the name they are usually called."
                },
                "lastName": {
                    "type": "string",
                    "description": "The member’s last name."
                },
                "nickname": {
                    "type": "string",
                    "description": "The member’s nickname. If present, usually safe to assume this is the name they go by."
                },
                "middleName": {
                    "type": "string",
                    "description": "The member’s middle name, if they have one."
                },
                "nameSuffix": {
                    "type": "string",
                    "description": "A name suffix, if the member uses one. For example, “Jr.” or “III”."
                },
                "aliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of common names combinations for a Congressperson if a combination does not exist, the result will be null and the index will be consistent."
                }
            }
        },
        "LegislatorFormElements": {
            "properties": {
                "bioguideId": {
                    "type": "string",
                    "description": "Identifier for this member in various Congressional sources. Originally taken from the Congressional Biographical Directory, but used in many places."
                },
                "formElements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FormElement"
                    }
                }
            }
        },
        "FormElement": {
            "properties": {
                "value": {
                    "type": "string",
                    "description": "The name of the field."
                },
                "maxLength": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The max length for this field."
                },
                "optionsHash": {
                    "type": "object",
                    "description": "An object describing the options this field can take and the corresponding value for each option."
                }
            }
        },
        "AddressSuggestion": {
            "description": "Location object describing a suggested address.",
            "properties": {
                "text": {
                    "type": "string",
                    "description": "The full address string for the suggestion."
                },
                "streetLine": {
                    "type": "string",
                    "description": "The street line, e.g. 123 Main Street, for the suggestion."
                },
                "city": {
                    "type": "string",
                    "description": "The city the address suggestion is located in."
                },
                "state": {
                    "type": "string",
                    "description": "The US state the address suggestion is located in."
                }
            }
        },
        "CanonicalAddress": {
            "description": "A canonical location object describing all aspects of a US address. This is a simplified version of the [SmartyStreets verification response](https://smartystreets.com/docs/address).",
            "properties": {
                "inputId": {
                    "type": "string",
                    "description": "Any unique identifier that you use to reference the input address. The output will be identical to the input.",
                    "maxLength": 50
                },
                "inputIndex": {
                    "type": "integer",
                    "description": "The order in which this address was submitted with the others (0 if alone)."
                },
                "candidateIndex": {
                    "type": "integer",
                    "description": "An input address can match multiple valid addresses. This ties the candidates to the input index. For example, \"1 Rosedale Street Baltimore Maryland\" will return multiple candidates.)"
                },
                "deliveryLineOne": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "Contains the first delivery line (usually the street address). This can include any of Primary Number, Street Name, Street Predirection, Street Postdirection, Street Suffix, Secondary Number, Secondary Designator, PMB Designator or PMB Number."
                },
                "lastLine": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "City, state, and ZIP Code combined."
                },
                "components": {
                    "type": "object",
                    "$ref": "#/definitions/AddressComponents"
                }
            }
        },
        "AddressComponents": {
            "description": "test",
            "properties": {
                "primaryNumber": {
                    "type": "string",
                    "maxLength": 30,
                    "description": "The house, PO Box, or building number."
                },
                "streetName": {
                    "type": "string",
                    "maxLength": 64,
                    "description": "The name of the street."
                },
                "streetPredirection": {
                    "type": "string",
                    "maxLength": 16,
                    "description": "Directional information before a street name, e.g. N, SW."
                },
                "streetPostdirection": {
                    "type": "string",
                    "maxLength": 16,
                    "description": "Directional information after a street name, e.g. N, SW."
                },
                "streetSuffix": {
                    "type": "string",
                    "maxLength": 16,
                    "description": "Abbreviated value describing the street, e.g. St, Ave, Blvd."
                },
                "secondardyNumber": {
                    "type": "string",
                    "maxLength": 32,
                    "description": "Apartment or suite number, if any."
                },
                "cityName": {
                    "type": "string",
                    "maxLength": 64,
                    "description": "The accepted/proper name of the city."
                },
                "defaultCityName": {
                    "type": "string",
                    "maxLength": 64,
                    "description": ".The default city name for the address. This field will not be present if the default city name is equal to the value of the city name field."
                },
                "stateAbbreviation": {
                    "type": "string",
                    "maxLength": 2,
                    "description": "The two-letter state abbreviation."
                },
                "zipcode": {
                    "type": "string",
                    "maxLength": 5,
                    "description": "The 5-digit ZIP Code"
                },
                "plus4Code": {
                    "type": "string",
                    "maxLength": 4,
                    "description": "The 4-digit add-on code (more specific than 5-digit ZIP)."
                }
            }
        },
        "Error": {
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}